openapi: 3.0.0
info:
  description: "Jobs_app"
  version: 1.0.0
  title: "OpenAPI Rest Article"
paths:
  /test:
    get:
      operationId: app.test.test
      tags:
        - test_tag
      summary: Test summary
      description: Test description
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: "foo"
        "204":
          description: OK. Empty responce
  #---------------------------------------------------------------------------------------------------------------------
  /area/{id}:
    get:
      operationId: app.area.get
      tags:
        - area
      summary: Area summary
      description: Area description
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: "foo"
        "204":
          description: OK. Empty responce
      parameters:
        - name: id
          in: path
          description: area id
          required: true
          schema:
            type: string
  /area/:
    post:
      operationId: app.area.post
      tags:
        - area
      summary: Create area
      description: Create area
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: "Area"
        "204":
          description: OK. Empty responce
      parameters:
        - name: name
          in: query
          description: new area name
          required: true
          schema:
            type: string

  /area/list:
    get:
      operationId: app.area.get_list
      tags:
        - area
      summary: Range of area objects
      description: Range of area objects
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: "Area"
        "204":
          description: OK. Empty responce
      parameters:
        - name: offset
          in: query
          description: offset to first entry
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: number of entries
          required: false
          schema:
            type: integer
            default: 100
  /area/count:
    get:
      operationId: app.area.get_count
      tags:
        - area
      summary: Range of area objects
      description: Count areas
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer

  #---------------------------------------------------------------------------------------------------------------------
  /employer/{id}:
    get:
      operationId: app.employer.get
      tags:
        - employer
      summary: Area summary
      description: Area description
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: "foo"
        "204":
          description: OK. Empty responce
      parameters:
        - name: id
          in: path
          description: employer id
          required: true
          schema:
            type: string
  /employer/:
    post:
      operationId: app.employer.post
      tags:
        - employer
      summary: Create employer
      description: Create employer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: "Area"
        "204":
          description: OK. Empty responce
      parameters:
        - name: name
          in: query
          description: new employer name
          required: true
          schema:
            type: string

  /employer/list:
    get:
      operationId: app.employer.get_list
      tags:
        - employer
      summary: Range of employer objects
      description: Range of employer objects
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: "Area"
        "204":
          description: OK. Empty responce
      parameters:
        - name: offset
          in: query
          description: offset to first entry
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: number of entries
          required: false
          schema:
            type: integer
            default: 100
  /employer/count:
    get:
      operationId: app.employer.get_count
      tags:
        - employer
      summary: Range of employer objects
      description: Count employers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
  #---------------------------------------------------------------------------------------------------------------------
  /currency/:
    get:
      operationId: app.currency.get
      tags:
        - currency
      summary: All currencies
      description: All currencies
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
    post:
      operationId: app.currency.post
      tags:
        - currency
      summary: Create currency
      description: Create currency
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
        "201":
          description: OK, creater
        "208":
          description: OK, already exists
      parameters:
        - name: name
          in: query
          description: new currency name
          required: true
          schema:
            type: string

  #---------------------------------------------------------------------------------------------------------------------





  /vacancy/list/{offset}/{limit}:
    get:
      operationId: app.vacancy.get
      tags:
        - vacancy
      summary: Vacancy summary
      description: Vacancy description
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: "foo"
        "204":
          description: OK. Empty responce
      parameters:
        - name: offset
          in: path
          description: offset
          required: true
          example: 0
          schema:
            type: integer
        - name: limit
          in: path
          description: limit
          required: true
          example: 100
          schema:
            type: integer

#            def get(offset:int = 0,limit:int = 100):

servers:
  - url: /api
