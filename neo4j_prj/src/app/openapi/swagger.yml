openapi: 3.0.0
info:
  description: "Jobs_app"
  version: 1.0.0
  title: "OpenAPI Rest Article"
paths:
  /test:
    get:
      operationId: app.test.test
      tags:
        - test_tag
      summary: Test summary
      description: Test description
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: "foo"
        "204":
          description: OK. Empty responce

  /test_api/{id}:
    get:
      operationId: app.aux.neo_api.get_kss_for_vac
      tags:
        - test_tag
      summary: Test summary
      description: Test description
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: "foo"
        "204":
          description: OK. Empty responce
      parameters:
        - name: id
          in: path
          description: vac id
          required: true
          schema:
            type: integer
  #---------------------------------------------------------------------------------------------------------------------
  /area/{id}:
    get:
      operationId: app.area.get
      tags:
        - area
      summary: Area summary
      description: Area description
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: "foo"
        "204":
          description: OK. Empty responce
      parameters:
        - name: id
          in: path
          description: area id
          required: true
          schema:
            type: string

  /area/:
    post:
      operationId: app.area.post
      tags:
        - area
      summary: Create area
      description: Create area
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: "Area"
        "204":
          description: OK. Empty responce
      parameters:
        - name: name
          in: query
          description: new area name
          required: true
          schema:
            type: string

  /area/list:
    get:
      operationId: app.area.get_list
      tags:
        - area
      summary: Range of area objects
      description: Range of area objects
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: "Area"
        "204":
          description: OK. Empty responce
      parameters:
        - name: offset
          in: query
          description: offset to first entry
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: number of entries
          required: false
          schema:
            type: integer
            default: 100
  /area/count:
    get:
      operationId: app.area.get_count
      tags:
        - area
      summary: Range of area objects
      description: Count areas
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer

  /area/cnt_by/{limit}:
    get:
      operationId: app.aux.neo_api.get_cnt_by_area
      tags:
        - area
      summary: Cnt of vac per area
      description: Cnt of vac per area
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                example: 10
                type: integer
      parameters:
        - name: limit
          in: path
          description: limit
          required: true
          schema:
            type: integer

  #---------------------------------------------------------------------------------------------------------------------
  /employer/{id}:
    get:
      operationId: app.employer.get
      tags:
        - employer
      summary: Area summary
      description: Area description
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: "foo"
        "204":
          description: OK. Empty responce
      parameters:
        - name: id
          in: path
          description: employer id
          required: true
          schema:
            type: string
  /employer/:
    post:
      operationId: app.employer.post
      tags:
        - employer
      summary: Create employer
      description: Create employer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: "Area"
        "204":
          description: OK. Empty responce
      parameters:
        - name: name
          in: query
          description: new employer name
          required: true
          schema:
            type: string

  /employer/list:
    get:
      operationId: app.employer.get_list
      tags:
        - employer
      summary: Range of employer objects
      description: Range of employer objects
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: "Area"
        "204":
          description: OK. Empty responce
      parameters:
        - name: offset
          in: query
          description: offset to first entry
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: number of entries
          required: false
          schema:
            type: integer
            default: 100
  /employer/count:
    get:
      operationId: app.employer.get_count
      tags:
        - employer
      summary: Range of employer objects
      description: Count employers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
  #---------------------------------------------------------------------------------------------------------------------
  /currency/:
    get:
      operationId: app.currency.get
      tags:
        - currency
      summary: All currencies
      description: All currencies
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
    post:
      operationId: app.currency.post
      tags:
        - currency
      summary: Create currency
      description: Create currency
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
        "201":
          description: OK, creater
        "208":
          description: OK, already exists
      parameters:
        - name: name
          in: query
          description: new currency name
          required: true
          schema:
            type: string

  #---------------------------------------------------------------------------------------------------------------------
  /schedule/:
    get:
      operationId: app.schedule.get
      tags:
        - aux
      summary: All schedules
      description: All schedules
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array

  /vacancy_type/:
    get:
      operationId: app.vacancy_type.get
      tags:
        - aux
      summary: All vacancy types
      description: All vacancy types
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array



  #---------------------------------------------------------------------------------------------------------------------


  /vacancy/sim/{id}/{limit}:
    get:
      operationId: app.aux.neo_api.get_similar_vacs_by_ks_all
      tags:
        - vacancy
      summary: Get similar vacancies
      description: Get similar vacancies
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
      parameters:
        - name: id
          in: path
          description: vacancy id
          required: true
          example: 50217143
          schema:
            type: integer
        - name: limit
          in: path
          description: limit
          required: true
          example: 10
          schema:
            type: integer

  /vacancy:
    post:
      operationId: app.aux.neo_api.create_vacancy
      tags:
        - vacancy
      summary: Create vacancy
      description: Create vacancy
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: "Area"
        "204":
          description: OK. Empty responce
      parameters:
        - name: name
          in: query
          description: vacancy name
          required: true
          schema:
            default: WA1
            type: string
        - name: area_id
          in: query
          description: area id
          required: true
          schema:
            example: 1
            type: integer
        - name: currency
          in: query
          description: currency
          required: false
          schema:
            default: RUR
            type: string
        - name: employer
          in: query
          description: employer
          required: false
          schema:
            default: EM1
            type: string
        - name: schedule
          in: query
          description: schedule
          required: false
          schema:
            type: string
        - name: requirement
          in: query
          description: requirement
          required: false
          schema:
            default: R1
            type: string
        - name: responsibility
          in: query
          description: responsibility
          required: false
          schema:
            default: R2
            type: string
        - name: salary_from
          in: query
          description: salary_from
          required: false
          schema:
            default: 1
            type: integer
        - name: salary_to
          in: query
          description: salary_to
          required: false
          schema:
            default: 2
            type: integer





  /vacancy/{id}:
    delete:
      summary: Delete vac
      operationId: app.aux.neo_api.del_vac
      tags:
        - vacancy
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
      parameters:
        - name: id
          in: path
          description: id
          required: true
          example: 0
          schema:
            type: integer


  /vacancy/top_need/{offset}/{limit}:
    get:
      operationId: app.aux.neo_api.get_top_need
      tags:
        - vacancy
      summary: Get top needed vacancies
      description: Get top needed vacancies
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
      parameters:
        - name: offset
          in: path
          description: offset
          required: true
          example: 0
          schema:
            type: integer
        - name: limit
          in: path
          description: limit
          required: true
          example: 4
          schema:
            type: integer

  /vacancy/top_paid/{offset}/{limit}:
    get:
      operationId: app.aux.neo_api.get_top_paid
      tags:
        - vacancy
      summary: Get top paid vacancies
      description: Get top paid vacancies
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
      parameters:
        - name: offset
          in: path
          description: offset
          required: true
          example: 0
          schema:
            type: integer
        - name: limit
          in: path
          description: limit
          required: true
          example: 4
          schema:
            type: integer

  /vacancy/top_new/{offset}/{limit}:
    get:
      operationId: app.aux.neo_api.get_top_new
      tags:
        - vacancy
      summary: Get newest vacancies
      description: Get newest vacancies
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
      parameters:
        - name: offset
          in: path
          description: offset
          required: true
          example: 0
          schema:
            type: integer
        - name: limit
          in: path
          description: limit
          required: true
          example: 4
          schema:
            type: integer


  /vacancy/list/{offset}/{limit}:
    get:
      operationId: app.vacancy.get
      tags:
        - vacancy
      summary: Vacancy summary
      description: Vacancy description
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: "foo"
        "204":
          description: OK. Empty responce
      parameters:
        - name: offset
          in: path
          description: offset
          required: true
          example: 0
          schema:
            type: integer
        - name: limit
          in: path
          description: limit
          required: true
          example: 100
          schema:
            type: integer

  /vacancy/filter/:
    get:
      operationId: app.aux.neo_api.filter
      tags:
        - vacancy
      summary: Vacancy summary
      description: Vacancy description
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: "foo"
        "204":
          description: OK. Empty responce
      parameters:
        - name: search_arg
          in: query
          description: Search string
          required: true
          example: Аналитик
          schema:
            type: string
        - name: areas
          in: query
          required: false
          description: Array of area id's
          schema:
            type: array
            items:
              type: integer
        - name: currency
          in: query
          required: false
          description: Currency of salary
          example: "RUR"
          schema:
            type: string
            default: "RUR"
        - name: sf
          in: query
          description: salary from
          required: false
          example: 0
          schema:
            type: integer
        - name: st
          in: query
          description: salary to
          required: false
          example: 500000
          schema:
            type: integer
        - name: offset
          in: query
          description: offset
          required: true
          example: 0
          schema:
            type: integer
        - name: limit
          in: query
          description: limit
          required: true
          example: 100
          schema:
            type: integer

  #---------------------------------------------------------------------------------------------------------------------
  /data/import:
    get:
      operationId: app.aux.neo_api.iimport
      tags:
        - data
        - import
      summary: All vacancy types
      description: All vacancy types
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
      parameters:
        - name: data_str
          in: query
          description: offset
          required: true
          schema:
            type: string

  /data/export:
    get:
      operationId: app.aux.neo_api.export
      tags:
        - data
        - export
      summary: All vacancy types
      description: All vacancy types
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string

servers:
  - url: /api
